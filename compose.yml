services:
  # Databases
  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    restart: always
    container_name: redis
    privileged: true
    expose:
      - 6379
    volumes:
      - redis-data:/data
    command: ['redis-server', '--appendonly', 'yes']
  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
  app:
    container_name: app
    build:
      context: .
      target: dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      db:
        condition: service_healthy
volumes:
  redis-data:
  postgres-data:
